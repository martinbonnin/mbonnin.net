{
    "thumbnail": "ireland2.png", 
    "title": "OpenVPN on a AWS micro instance"
}

Amazon is offering a micro instance as part of its free tier AWS service. I took the opportunity to try it as a VPN server. It's actually working quite well. I mostly followed the openVPN [Static Key Mini HowTo](http://openvpn.net/index.php/open-source/documentation/miscellaneous/78-static-key-mini-howto.html). Then had some troubles understanding how to route everything. The VPN is routed, not bridged, and uses NAT on the server side. Here is what I did to get it working:

1. First generate a static key:
    openvpn --genkey --secret static.key
    

2. Then the server (aws) configuration file:
    dev tun
    ifconfig 10.8.0.1 10.8.0.2
    secret static.key
    

3. And finally the client configuration file:
    dev tun
    ifconfig 10.8.0.2 10.8.0.1
    secret static.key
    

Once there it is possible to ping the other end of the vpn (10.8.0.1). That verifies that the vpn is up and running but does not help much. In order to redirect all the network traffic through the VPN, I had to:

1. Tell the server to masquerade the client's ip
    iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
    echo 1 > /proc/sys/net/ipv4/ip_forward
    

2. Tell the client to route the traffic through the new 10.8.0.2 interface. Actually, the openVPN client program does it for us with the 'redirect-gateway' option which adds a quite handy default route.

Now I could redirect all traffic through the VPN. Unfortunately, with this, DNS stopped working for some reason so I had to route this one outside of the VPN. 
    sudo route add $DNS gw 192.168.0.254
    

And TADA, VPN is working. I'm Irish now ! :-)
![](ireland2.png)

Two helpers scripts to start the server/client are [here](http://mbonnin.net/wp-content/uploads/2013/06/openvpn_aws_client) and [here](http://mbonnin.net/wp-content/uploads/2013/06/openvpn_aws_server)
